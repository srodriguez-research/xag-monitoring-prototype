services:

  # monitor:
  #   build: ./monitoring/
  #   environment:
  #     - SERVICE_NAME=coffee-mock
  #     - TEMPO_URL=http://tempo:3200/api
  #
  #   volumes:
  #     - ./applications/coffee/features:/app/features
  #     - ./data/traces_store:/app/data/traces_store
  #     - ./data/reports:/app/data/reports
  #   depends_on:
  #     - tempo
  #
  # allure:
  #   image: "frankescobar/allure-docker-service"
  #   environment:
  #     CHECK_RESULTS_EVERY_SECONDS: 1
  #     KEEP_HISTORY: 1
  #   ports:
  #     - "5050:5050"
  #   volumes:
  #     - ./data/reports:/app/allure-results
  #     # - ${PWD}/allure-reports:/app/default-reports

  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./data/tempo-data:/var/tempo

  memcached:
    image: memcached:1.6.29
    container_name: memcached
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m  # Set the maximum memory usage
      - MEMCACHED_THREADS=4       # Number of threads to use


  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./configs/tempo.yaml:/etc/tempo.yaml
      - ./data/tempo-data:/var/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
      # - "55680:55680"  # OpenTelemetry
    depends_on:
      - init
      - memcached

  # k6-tracing:
  #   image: ghcr.io/grafana/xk6-client-tracing:v0.0.5
  #   environment:
  #     - ENDPOINT=tempo:4317
  #   restart: always
  #   depends_on:
  #     - tempo

  loki:
    image: grafana/loki:main
    ports:
      - "3100:3100"
    volumes:
      - ./configs/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  # prompushgateway:
  #   image: prom/pushgateway
  #   ports:
  #    - "9091:9091"
  #
  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./configs/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.0.0
    volumes:
      - ./configs/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor traceQLStreaming metricsSummary
    ports:
      - "3000:3000"
